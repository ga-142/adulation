<?php 

require('./csv-import.php');

function generateRandomString($length = 10) {
    $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    $charactersLength = strlen($characters);
    $randomString = '';
    for ($i = 0; $i < $length; $i++) {
        $randomString .= $characters[rand(0, $charactersLength - 1)];
    }
    return $randomString;
}




	if(!empty($_GET)){
		$adu = new Adulator();
		$sortedVars = $adu->varSort($_GET);
		$adu->args = $sortedVars;
		$combos = $adu->recombine();
	
		$file_id = generateRandomString(16);
		$thisfile = $adu->adulate($combos, $file_id);
		$import = $adu->importCSV($file_id);
		echo '<pre>';
		var_dump($import);
		echo '</pre>';

		$success = true;
	
	}

class Adulator{


	function __construct(){
		$this->id = rand(100,1000000);
	}

	function __set($args,$trash){
		$this->args = $args;
		$this->trash = $trash;
	}

	public function recombine(){

		$adgroup = $this->args['adgroup'];
		$url = $this->args['url'];
		$path1 = $this->args['path1'];

		$path2 = $this->args['path2'];

		$first_headlines = $this->args['first_headlines'];
		$second_headlines = $this->args['second_headlines'];
		$descs = $this->args['descs'];


	    $return = array();
	    foreach($first_headlines as $prime){
	        $prime = trim($prime);
	        if(strlen($prime) > 0 ){
	            foreach($second_headlines as $sec){

	                $sec = trim($sec);

	                if(strlen($sec) > 0 && $prime != $sec ){

	                    if(isset($descs) && !empty($descs)){
	                        foreach($descs as $tet){
	                            if(strlen($tet) > 0 && $sec != $tet ){   
	                             $return[] =  "{$adgroup},Headline,Enabled,All,{$url},{$prime},{$sec}, {$tet},{$path1}, {$path2} ";
	                            }
	                        }
	                    }
	                }
	            }
	        }       
	    }
	    return $return;
	}



	public function Adulate($output,$file_id){


		$file = fopen("files/output". $file_id.".csv","w");
		fputcsv($file,array('Ad Group', 'Click type',	'Ad status','Device preference','Final URL','Headline 1','Headline 2','Description','Path 1','Path 2'
		));
		foreach ($output as $out)
		  {
		  fputcsv($file,explode(',',$out));
		  }
		fclose($file);
		return $file;
	}

	public function varSort($get){


		$return = array();
		foreach($get as $k => $v){

			switch (true) {
			    case (strpos($k, 'path1')) !== false:
			        $return['path1'] = $v;
			    break;

			    case (strpos($k, 'path2')) !== false:
			        $return['path2'] = $v;
			    break;
			    case (strpos($k, 'adgroup')) !== false:
			        $return['adgroup'] = $v;
			    break;
				
			    case (strpos($k, 'url')) !== false:
			        $return['url'] = $v;
			    break;

			    case (strpos($k, 'first-headline')) !== false:
			        $return['first_headlines'][] = $v;
			    break;

			    case strpos($k, 'second-headline') !== false:
			        $return['second_headlines'][] = $v;
			    break;

			    case strpos($k, 'desc') !== false:
			        $return['descs'][] = $v;
			    break;
			}
		}
		return $return;
	}
	public function printItems($items,$item_class,$max_char){
		$counter = 1;
		foreach($items as $item){
			echo 
					
				"<label class=\"{$item_class}-label\" for=\"{$item_class}-{$counter}\">Version {$counter}</label><textarea id=\"{$item_class}-{$counter}\" class=\"max-{$max_char} {$item_class}\" rows=\"1\"  name=\"{$item_class}-{$counter} \"'>".htmlspecialchars($item)."</textarea>";
			
				echo "<button type=\"button\"  id=\"{$item_class}-{$counter}-remove-button\" class=\"remove\" onclick=\"removeItem('{$item_class}','{$item_class}-{$counter}');\" >- Remove -</button>";
			

		$counter++;
		}
	}

	public function importCSV($file_id){
		$return = array();
		$importer = new CsvImporter("files/output". $file_id.".csv",true);
		while($data = $importer->get(2000)){
			$index = explode(',',str_replace('"', '', key($data[0])));
			foreach($data as $values){
				foreach($values as $row){
				$cells = explode(',',$row);
				$return[] = array_combine ($index, $cells);
				}
			}
		} 
		return $return;
	}

}?>

<html>
    <head>
        <title>Adulation </title>
        <!--[if IE]><meta http-equiv='X-UA-Compatible' content='IE=edge,chrome=1'><![endif]-->
	    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    </head>
    <body>
        <style>
            span{font-size:1em;line-height:1em;padding:0;margin:0;}
            .elem{display:inline-block;position:relative;width:7em;height:8em;padding:.5em;margin:1em;border:1px solid black;}
            .elem .number{display:block;position:absolute;top:.5em;left:.5em;}
            .elem .symbol{display:block;padding-top:.5em;text-align:center;line-height:3em;font-size:2em;font-weight:bold;-webkit-touch-callout: none;-webkit-user-select: none;-khtml-user-select: none;-moz-user-select: none;-ms-user-select: none;user-select: none;}
            .elem .name{display:block;text-align:center;}
            .divide{display:inline-block;vertical-align: text-bottom;line-height:8em;font-size:1em;}
            .divide:last-of-type{display:none;}
            form input, form textarea,form button{

            	display:inline-block;
            	vertical-align: top;
            }
            form div.input-wrap, form label{
            	display: block;
            	width:100%;
            }
            .segment{


            	display:inline-block;
            	vertical-align: top;
            	width:30%;
            }

        </style>
        <form method='get'>

        	<label>Ad Group</label>

        	<div class="input-wrap">
        		<input type="text" name="adgroup" value="<?php echo htmlspecialchars($_GET['adgroup'],ENT_QUOTES); ?>">
        	</div>

        	<label>Final URL</label>

        	<div class="input-wrap">
        		<input type="text" name="url" value="<?php echo htmlspecialchars($_GET['url'],ENT_QUOTES); ?>">
    	    </div>

    	    <label>Path 1</label>
        	<div class="input-wrap">
        		<input type="text" name="path1" value="<?php echo htmlspecialchars($_GET['path1'],ENT_QUOTES); ?>">
    	    </div>

  	   		 <label>Path 2</label>
        	<div class="input-wrap">
        		<input type="text" name="path2" value="<?php echo htmlspecialchars($_GET['path2'],ENT_QUOTES); ?>">
    	    </div>


    	    <div class="segment">
			  	<div id="first-headline-wrap">	
	        	<h3>First Headlines</h3>
	        	

			<?php if( empty($sortedVars['first_headlines'] )){?>

	        		<div class="input-wrap">
						<label class="first-headline-label" for="first-headline-1">Version 1</label>
						<textarea id="first-headline-1" class="max-30 first-headline" rows="1"  name='first-headline-1'></textarea>
					</div>
					<div class="input-wrap">
						<label class="first-headline-label" for="first-headline-2">Version 2</label>
						<textarea id="first-headline-2" class="max-30 first-headline" rows="1"  name='first-headline-2'></textarea>
					</div>

			<?php
				}
				else{
					$adu->printItems($sortedVars['first_headlines'],'first-headline',30);

				}
			?>

				</div>	

				<div id="first-headline-button-wrap">
					<button type="button" id="add-first-headline" class="add">+ Add More +</button>
				</div>

			</div><div class="segment">

			   	<div id="second-headline-wrap">
					<h3>Second Headlines</h3>
			<?php if( empty($sortedVars['second_headlines'] )){?>
		        		<div class="input-wrap">
							<label class="second-headline-label" for="second-headline-1">Version 1</label>
							<textarea id="second-headline-1" class="max-30 second-headline" rows="1"  name='second-headline-1'></textarea>
						</div>
						<div class="input-wrap">
							<label class="second-headline-label" for="second-headline-2">Version 2</label>
							<textarea id="second-headline-2" class="max-30 second-headline" rows="1"  name='second-headline-2'></textarea>
						</div>
				<?php
					}
					else{
						$adu->printItems($sortedVars['second_headlines'],'second-headline',30);
					}
				?>
				</div>	


				<div id="second-headline-button-wrap">
					<button type="button" id="add-second-headline" class="add">+ Add More +</button>
				</div>

			</div><div class="segment">

	 	      	<div id="desc-wrap">
	            	<h3>Descriptions</h3>
				<?php if( empty($sortedVars['descs'] )){?>

	          		<label class="desc-label" for="desc-1">Version 1</label>
		          	<textarea   class="desc max-80" rows="1" id="desc-1" name='desc-1'></textarea>

		         	<label class="desc-label" for="desc-2">Version 2</label>
		          	<textarea class="desc max-80"  rows="1" id="desc-2" name='desc-2'></textarea>

				<?php
					}
					else{
						$adu->printItems($sortedVars['descs'],'desc',80);

					}
				?>


	         	</div>					
				<div id="desc-button-wrap">
					<button type="button" id="add-desc" class="add">+ Add More +</button>

				</div>
			</div>
            <button type='submit'>Submit</button>
        </form>
        <?php 
        	if($success == true){
        		echo '<a href="files/output'.$file_id.'.csv">Download Ads<a>';
        	}
        ?>
    </body>
<script src="https://code.jquery.com/jquery-3.3.1.js"  integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=" crossorigin="anonymous"></script>
<script>
$(document).on('keyup', '.max-30', function() {
   var id = $(this).attr('id');
   var text = $("label[for="+id+"]").html();
   var new_text = text.split('(')[0];
   var remaining = 30 - $(this).val().length;
   $("label[for="+id+"]").html(new_text+" ("+remaining+" Chars)");
});
$(document).on('keyup', '.max-80', function() {
   var id = $(this).attr('id');
   var text = $("label[for="+id+"]").html();
   var new_text = text.split('(')[0];
   var remaining = 80 - $(this).val().length;
   $("label[for="+id+"]").html(new_text+" ("+remaining+" Chars)");
});
function addItem(item_class, max_char){
	var lineNum = $('.' + item_class).length;
	var thisLine = lineNum + 1;
	$( "#" + item_class + "-wrap" ).append( "<label class=\""+ item_class +"-label\" for=\""+ item_class + "-" + thisLine + "\">Version " + thisLine + "</label><textarea id=\""+ item_class +"-" + thisLine + "\" class=\"max-"+ max_char + " "+ item_class +"\" rows=\"1\"  name='"+ item_class +"-" + thisLine + "'></textarea>" );
	if($("#"+item_class+"-remove-button").length == 0){
		$( "#"+item_class+"-button-wrap" ).append("<button type=\"button\"  id=\""+item_class+"-remove-button\" class=\"remove\" onclick=\"removeItem('"+ item_class +"');\" >- Remove -</button>");
	}
}
function removeItem(item_class) {
	var to_remove = $('.' + item_class ).last();
	var tr_id = to_remove.attr('id'); 
	var this_id = item_class + '-remove-button';

	if(tr_id != item_class + '-1' && tr_id != item_class + '-2'  ){
		$('label[for="' + tr_id + '"]' ).remove();
		to_remove.remove();
	}
	var items = $('.' + item_class).length;
	if(items <= 2){
		$('#' + this_id).remove();
	}
}

function prepareItems(item_class){

	if($('.' + item_class).length > 2 && $("#"+item_class+"-remove-button").length == 0){
		$( "#"+item_class+"-button-wrap" ).append("<button type=\"button\"  id=\""+item_class+"-remove-button\" class=\"remove\" onclick=\"removeItem('"+ item_class +"');\" >- Remove -</button>");
	}
}

$( "#add-first-headline" ).click(function() {
	addItem('first-headline',30);
});
$( "#add-second-headline" ).click(function() {
	addItem('second-headline',30);
});
$( "#add-desc" ).click(function() {
	addItem('desc',80);
});
$( document ).ready(function() {
	prepareItems('first-headline');
    prepareItems('second-headline');
    prepareItems('desc');
});
</script>
</html>